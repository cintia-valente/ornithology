{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AnnotationService {\n  constructor(http) {\n    this.http = http;\n    this.options = {\n      headers: new HttpHeaders().set('Content-type', 'application/json')\n    };\n    this.API = 'api/annotation';\n  }\n  getAnnotations() {\n    return this.http.get(`${environment.clientUrl}annotations/`);\n  }\n  getAnnotationByBirdId(idBird, data) {\n    let params = data ? {\n      data\n    } : {};\n    return this.http.get(environment.clientUrl + '/annotationsbybird/' + idBird, {\n      headers: this.options.headers,\n      params\n    });\n  }\n  postAnnotations(data) {\n    return this.http.post(environment.clientUrl + '/api/annotations', data, this.options);\n  }\n  putAnnotations(idAnnotation, data) {\n    return this.http.put(environment.clientUrl + '/api/annotations/' + idAnnotation, data);\n  }\n  deleteAnnotations(idAnnotation) {\n    return this.http.delete(environment.clientUrl + '/api/annotations/' + idAnnotation);\n  }\n}\nAnnotationService.ɵfac = function AnnotationService_Factory(t) {\n  return new (t || AnnotationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAnnotationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnnotationService,\n  factory: AnnotationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAGEA,WAAW,QACN,sBAAsB;AAE7B,SAASC,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,iBAAiB;EAM5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALxB,YAAO,GAAG;MACRC,OAAO,EAAE,IAAIL,WAAW,EAAE,CAACM,GAAG,CAAC,cAAc,EAAE,kBAAkB;KAClE;IAEgB,QAAG,GAAG,gBAAgB;EACA;EAEvCC,cAAc;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,GAAGP,WAAW,CAACQ,SAAS,cAAc,CAAC;EAC9D;EAEAC,qBAAqB,CAACC,MAAc,EAAEC,IAAS;IAC7C,IAAIC,MAAM,GAAGD,IAAI,GAAG;MAAEA;IAAI,CAAE,GAAI,EAAU;IAE1C,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAClBP,WAAW,CAACQ,SAAS,GAAG,qBAAqB,GAAGE,MAAM,EACtD;MACEN,OAAO,EAAE,IAAI,CAACS,OAAO,CAACT,OAAO;MAC7BQ;KACD,CACF;EACH;EAEAE,eAAe,CAACH,IAAgB;IAC9B,OAAO,IAAI,CAACR,IAAI,CAACY,IAAI,CACnBf,WAAW,CAACQ,SAAS,GAAG,kBAAkB,EAC1CG,IAAI,EACJ,IAAI,CAACE,OAAO,CACb;EACH;EAEAG,cAAc,CACZC,YAAoB,EACpBN,IAAgB;IAEhB,OAAO,IAAI,CAACR,IAAI,CAACe,GAAG,CAClBlB,WAAW,CAACQ,SAAS,GAAG,mBAAmB,GAAGS,YAAY,EAC1DN,IAAI,CACL;EACH;EAEAQ,iBAAiB,CAACF,YAAoB;IACpC,OAAO,IAAI,CAACd,IAAI,CAACiB,MAAM,CACrBpB,WAAW,CAACQ,SAAS,GAAG,mBAAmB,GAAGS,YAAY,CAC3D;EACH;;;mBA9CWhB,iBAAiB;AAAA;;SAAjBA,iBAAiB;EAAAoB,SAAjBpB,iBAAiB;EAAAqB,YADJ;AAAM","names":["HttpHeaders","environment","AnnotationService","constructor","http","headers","set","getAnnotations","get","clientUrl","getAnnotationByBirdId","idBird","data","params","options","postAnnotations","post","putAnnotations","idAnnotation","put","deleteAnnotations","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projetos\\Ornithology\\frontend\\src\\app\\services\\annotation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n} from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { Annotation } from '../model/annotation.model';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AnnotationService {\r\n  options = {\r\n    headers: new HttpHeaders().set('Content-type', 'application/json'),\r\n  };\r\n\r\n  private readonly API = 'api/annotation';\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAnnotations(): any {\r\n    return this.http.get(`${environment.clientUrl}annotations/`);\r\n  }\r\n\r\n  getAnnotationByBirdId(idBird: String, data: any) {\r\n    let params = data ? { data } : ({} as any);\r\n\r\n    return this.http.get<Annotation[]>(\r\n      environment.clientUrl + '/annotationsbybird/' + idBird,\r\n      {\r\n        headers: this.options.headers,\r\n        params,\r\n      }\r\n    );\r\n  }\r\n\r\n  postAnnotations(data: Annotation): Observable<Annotation> {\r\n    return this.http.post<Annotation>(\r\n      environment.clientUrl + '/api/annotations',\r\n      data,\r\n      this.options\r\n    );\r\n  }\r\n\r\n  putAnnotations(\r\n    idAnnotation: string,\r\n    data: Annotation\r\n  ): Observable<Annotation> {\r\n    return this.http.put<Annotation>(\r\n      environment.clientUrl + '/api/annotations/' + idAnnotation,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteAnnotations(idAnnotation: string): Observable<Annotation> {\r\n    return this.http.delete<Annotation>(\r\n      environment.clientUrl + '/api/annotations/' + idAnnotation\r\n    );\r\n  }\r\n\r\n  //   private handleError(error: HttpErrorResponse) {\r\n  //     if (error.error instanceof ErrorEvent) {\r\n  //       console.error('An error has occurred:', error.error.message);\r\n  //     } else {\r\n  //       console.error(\r\n  //         `Backend returned code ${error.status}, ` + `body: ${error.error}`\r\n  //       );\r\n  //       return throwError(error.status);\r\n  //     }\r\n  //     return throwError('Something bad happened; please try again later.');\r\n  //   }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}