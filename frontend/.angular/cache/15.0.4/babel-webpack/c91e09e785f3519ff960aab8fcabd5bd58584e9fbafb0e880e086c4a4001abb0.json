{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/annotation.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nfunction AnnotationComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" Campo obrigat\\u00F3rio. Por favor, informe um local. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    invalid: a0\n  };\n};\nexport class AnnotationComponent {\n  constructor(formBuilder, annotationService, toastr) {\n    this.formBuilder = formBuilder;\n    this.annotationService = annotationService;\n    this.toastr = toastr;\n    this.submmited = false;\n    this.error = false;\n    this.loading = false;\n    this.annotationForm = this.formBuilder.group({\n      idAnnotation: [''],\n      idBird: [''],\n      date: [''],\n      place: ['', [Validators.minLength(3), Validators.maxLength(100)]]\n    });\n  }\n  ngOnInit() {}\n  addAnnotations() {\n    debugger;\n    this.annotationService.postAnnotations(this.annotationFormData).subscribe(item => {\n      this.loading = false;\n      this.toastr.success('Cadastrado com sucesso');\n    }\n    // () => {\n    //   this.loading = false;\n    //   this.error = true;\n    //   return throwError(() => new Error('err'));\n    // }\n    );\n  }\n}\n\nAnnotationComponent.ɵfac = function AnnotationComponent_Factory(t) {\n  return new (t || AnnotationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AnnotationService), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\nAnnotationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AnnotationComponent,\n  selectors: [[\"app-annotation\"]],\n  decls: 16,\n  vars: 5,\n  consts: [[1, \"annotation\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-xl-8\"], [1, \"section-title\"], [1, \"form-annotation\", 3, \"formGroup\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-8\"], [\"for\", \"inputNome\"], [\"type\", \"text\", \"formControlName\", \"place\", \"id\", \"place\", \"placeholder\", \"Local\", 1, \"form-text\", 3, \"ngClass\"], [\"class\", \"invalid-field\", 4, \"ngIf\"], [1, \"register\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"invalid-field\"]],\n  template: function AnnotationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵtext(5, \"Cadastro de Anota\\u00E7\\u00F5es\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Local*:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 9);\n      i0.ɵɵtemplate(12, AnnotationComponent_div_12_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 11)(14, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AnnotationComponent_Template_button_click_14_listener() {\n        return ctx.addAnnotations();\n      });\n      i0.ɵɵtext(15, \" Cadastrar \");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.annotationForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.annotationForm.controls.place.invalid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.annotationForm.controls.place.invalid && ctx.annotationForm.controls.place.getError(\"required\"));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICkBrDC,+BAMC;IACCA,sEACF;IAAAA,iBAAM;;;;;;;;ADfpB,OAAM,MAAOC,mBAAmB;EAO9BC,YACUC,WAAwB,EACxBC,iBAAoC,EACrCC,MAAqB;IAFpB,gBAAW,GAAXF,WAAW;IACX,sBAAiB,GAAjBC,iBAAiB;IAClB,WAAM,GAANC,MAAM;IARf,cAAS,GAAY,KAAK;IAC1B,UAAK,GAAY,KAAK;IACtB,YAAO,GAAY,KAAK;IAQtB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC3CC,YAAY,EAAE,CAAC,EAAE,CAAC;MAClBC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAAEb,UAAU,CAACc,SAAS,CAAC,GAAG,CAAC,CAAC;KACjE,CAAC;EACJ;EAEAC,QAAQ,IAAU;EAElBC,cAAc;IACZ;IACA,IAAI,CAACX,iBAAiB,CAACY,eAAe,CAAC,IAAI,CAACC,kBAAkB,CAAC,CAACC,SAAS,CACtEC,IAAS,IAAI;MACZ,IAAI,CAACC,OAAO,GAAG,KAAK;MACpB,IAAI,CAACf,MAAM,CAACgB,OAAO,CAAC,wBAAwB,CAAC;IAC/C;IACA;IACA;IAEA;IACA;IACA;IAAA,CACD;EACH;;;;mBApCWpB,mBAAmB;AAAA;;QAAnBA,mBAAmB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZhC1B,kCAA4B;MAIOA,+CAAqB;MAAAA,iBAAM;MACtDA,+BAA2D;MAG9BA,wBAAO;MAAAA,iBAAQ;MACtCA,4BASE;MACFA,uEAQM;MACRA,iBAAM;MACNA,gCAAsB;MAIlBA;QAAA,OAAS2B,oBAAgB;MAAA,EAAC;MAE1B3B,4BACF;MAAAA,iBAAS;;;MA/BTA,eAA4B;MAA5BA,8CAA4B;MAU1BA,eAEE;MAFFA,+FAEE;MAIDA,eAIjB;MAJiBA,0HAIjB","names":["Validators","i0","AnnotationComponent","constructor","formBuilder","annotationService","toastr","annotationForm","group","idAnnotation","idBird","date","place","minLength","maxLength","ngOnInit","addAnnotations","postAnnotations","annotationFormData","subscribe","item","loading","success","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projetos\\Ornithology\\frontend\\src\\app\\modules\\pages\\annotation\\annotation.component.ts","C:\\Projetos\\Ornithology\\frontend\\src\\app\\modules\\pages\\annotation\\annotation.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AnnotationService } from 'src/app/services/annotation.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-annotation',\n  templateUrl: './annotation.component.html',\n  styleUrls: ['./annotation.component.scss'],\n})\nexport class AnnotationComponent implements OnInit {\n  annotationForm: FormGroup;\n  submmited: boolean = false;\n  error: boolean = false;\n  loading: boolean = false;\n  annotationFormData: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private annotationService: AnnotationService,\n    public toastr: ToastrService\n  ) {\n    this.annotationForm = this.formBuilder.group({\n      idAnnotation: [''],\n      idBird: [''],\n      date: [''],\n      place: ['', [Validators.minLength(3), Validators.maxLength(100)]],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  addAnnotations() {\n    debugger;\n    this.annotationService.postAnnotations(this.annotationFormData).subscribe(\n      (item: any) => {\n        this.loading = false;\n        this.toastr.success('Cadastrado com sucesso');\n      }\n      // () => {\n      //   this.loading = false;\n\n      //   this.error = true;\n      //   return throwError(() => new Error('err'));\n      // }\n    );\n  }\n}\n","<section class=\"annotation\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-xl-8\">\n        <div class=\"section-title\">Cadastro de Anotações</div>\n        <form [formGroup]=\"annotationForm\" class=\"form-annotation\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-8\">\n              <label for=\"inputNome\">Local*:</label>\n              <input\n                type=\"text\"\n                class=\"form-text\"\n                formControlName=\"place\"\n                id=\"place\"\n                placeholder=\"Local\"\n                [ngClass]=\"{\n                  invalid: annotationForm.controls.place.invalid\n                }\"\n              />\n              <div\n                class=\"invalid-field\"\n                *ngIf=\"\n                  annotationForm.controls.place.invalid &&\n                  annotationForm.controls.place.getError('required')\n                \"\n              >\n                Campo obrigatório. Por favor, informe um local.\n              </div>\n            </div>\n            <div class=\"register\">\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary\"\n                (click)=\"addAnnotations()\"\n              >\n                Cadastrar\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}